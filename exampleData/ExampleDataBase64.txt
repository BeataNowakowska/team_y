Q0p1c3QgdGhpbmsgaG93IGhhcHB5IHlvdSB3b3VsZCBiZSBpZiB5b3UgbG9zdCBldmVyeXRoaW5nIHlvdSBoYXZlIHJpZ2h0IG5vdywgYW5kIHRoZW4gZ290IGl0IGJhY2sgYWdhaW4uIEZyYW5jZXMgUm9kbWFuI1VXaGF0IHdvdWxkIHlvdXIgZnJpZW5kIGRvPyNRQnJhc3MgZ2V0cyBkaXNjb2xvdXJlZCBpbiBhaXIgYmVjYXVzZSBvZiB0aGUgcHJlc2VuY2Ugb2Ygd2hpY2ggb2YgdGhlIGZvbGxvd2luZyBnYXNlcyBpbiBhaXI/T3h5Z2VuLEh5ZHJvZ2VuIHN1bHBoaWRlLENhcmJvbiBkaW94aWRlLE5pdHJvZ2VuPzIjUEEgbWFuIGhhcyBhIHdvbGYsIGEgZ29hdCwgYW5kIGEgY2FiYmFnZS4gSGUgbXVzdCBjcm9zcyBhIHJpdmVyIHdpdGggdGhlIHR3byBhbmltYWxzIGFuZCB0aGUgY2FiYmFnZS4gVGhlcmUgaXMgYSBzbWFsbCByb3dpbmcgYm9hdCwgaW4gd2hpY2ggaGUgY2FuIHRha2Ugb25seSBvbmUgdGhpbmcgd2l0aCBoaW0gYXQgYSB0aW1lLiBJZiwgaG93ZXZlciwgdGhlIHdvbGYgYW5kIHRoZSBnb2F0IGFyZSBsZWZ0IGFsb25lLCB0aGUgd29sZiB3aWxsIGVhdCB0aGUgZ29hdC4gSWYgdGhlIGdvYXQgYW5kIHRoZSBjYWJiYWdlIGFyZSBsZWZ0IGFsb25lLCB0aGUgZ29hdCB3aWxsIGVhdCB0aGUgY2FiYmFnZS4gSG93IGNhbiB0aGUgbWFuIGdldCBhY3Jvc3MgdGhlIHJpdmVyIHdpdGggdGhlIHR3byBhbmltYWxzIGFuZCB0aGUgY2FiYmFnZT8gRG9uJ3Qga25vdyNDRmFpbHVyZSBzaG91bGQgYmUgb3VyIHRlYWNoZXIsIG5vdCBvdXIgdW5kZXJ0YWtlci4gRmFpbHVyZSBpcyBkZWxheSwgbm90IGRlZmVhdC4gSXQgaXMgYSB0ZW1wb3JhcnkgZGV0b3VyLCBub3QgYSBkZWFkLWVuZC4gRmFpbHVyZSBpcyBzb21ldGhpbmcgd2UgY2FuIGF2b2lkIG9ubHkgYnkgc2F5aW5nIG5vdGhpbmcsIGRvaW5nIG5vdGhpbmcsIGFuZCBiZWluZyBub3RoaW5nLiBEZW5pcyBXYWl0bGV5I1VXaGF0IHdvdWxkIG1hc3RlciBZb2RhIGRvPyNRV2hpY2ggb2YgdGhlIGZvbGxvd2luZyBpcyBhIG5vbiBtZXRhbCB0aGF0IHJlbWFpbnMgbGlxdWlkIGF0IHJvb20gdGVtcGVyYXR1cmU/UGhvc3Bob3JvdXMsQnJvbWluZSxDaGxvcmluZSxIZWxpdW0/MiNQQSBsaWdodCBidWxiIGlzIGhhbmdpbmcgaW4gYSByb29tLiBPdXRzaWRlIG9mIHRoZSByb29tLCB0aGVyZSBhcmUgdGhyZWUgc3dpdGNoZXMsIG9mIHdoaWNoIG9ubHkgb25lIGlzIGNvbm5lY3RlZCB0byB0aGUgbGFtcC4gSW4gdGhlIHN0YXJ0aW5nIHNpdHVhdGlvbiwgYWxsIHN3aXRjaGVzIGFyZSAnb2ZmJyBhbmQgdGhlIGJ1bGIgaXMgbm90IGxpdC4gSWYgaXQgaXMgYWxsb3dlZCB0byBjaGVjayBpbiB0aGUgcm9vbSBvbmx5IG9uY2UgdG8gc2VlIGlmIHRoZSBidWxiIGlzIGxpdCBvciBub3QgKHRoaXMgaXMgbm90IHZpc2libGUgZnJvbSB0aGUgb3V0c2lkZSksIGhvdyBjYW4geW91IGRldGVybWluZSB3aXRoIHdoaWNoIG9mIHRoZSB0aHJlZSBzd2l0Y2hlcyB0aGUgbGlnaHQgYnVsYiBjYW4gYmUgc3dpdGNoZWQgb24/IERvbid0IGtub3cjQ1ZlcnkgbGl0dGxlIGlzIG5lZWRlZCB0byBtYWtlIGEgaGFwcHkgbGlmZTsgaXQgaXMgYWxsIHdpdGhpbiB5b3Vyc2VsZiwgaW4geW91ciB3YXkgb2YgdGhpbmtpbmcuIE1hcmN1cyBBdXJlbGl1cyNVSXMgaXQgcmVhbGx5IHRoZSBiZXN0IHRoaW5nIHRvIGRvIHJpZ2h0IG5vdz8jUVdoZW4gYSBnYXMgaXMgdHVybmVkIGludG8gYSBsaXF1aWQsIHRoZSBwcm9jZXNzIGlzIGNhbGxlZD9jb25kZW5zYXRpb24sZXZhcG9yYXRpb24sZGVwb3NpdGlvbixzdWJsaW1hdGlvbj8xI1BUb20gaGFzIHRocmVlIGJveGVzIHdpdGggZnJ1aXRzIGluIGhpcyBiYXJuOiBvbmUgYm94IHdpdGggYXBwbGVzLCBvbmUgYm94IHdpdGggcGVhcnMsIGFuZCBvbmUgYm94IHdpdGggYm90aCBhcHBsZXMgYW5kIHBlYXJzLiBUaGUgYm94ZXMgaGF2ZSBsYWJlbHMgdGhhdCBkZXNjcmliZSB0aGUgY29udGVudHMsIGJ1dCBub25lIG9mIHRoZXNlIGxhYmVscyBpcyBvbiB0aGUgcmlnaHQgYm94LiBIb3cgY2FuIFRvbSBkZXRlcm1pbmUgd2hhdCBlYWNoIG9mIHRoZSBib3hlcyBjb250YWlucywgYnkgdGFraW5nIG9ubHkgb25lIHBpZWNlIG9mIGZydWl0IGZyb20gb25lIGJveD8gRG9uJ3Qga25vdyNDVGhleSBzYXkgYSBwZXJzb24gbmVlZHMganVzdCB0aHJlZSB0aGluZ3MgdG8gYmUgdHJ1bHkgaGFwcHkgaW4gdGhpcyB3b3JsZDogc29tZW9uZSB0byBsb3ZlLCBzb21ldGhpbmcgdG8gZG8sIGFuZCBzb21ldGhpbmcgdG8gaG9wZSBmb3IuIFRvbSBCb2RldHQjVVdoYXQgd291bGQgYmUgdGhlIHBlcmZlY3Qgc29sdXRpb24/I1FXaGljaCBvZiB0aGUgZm9sbG93aW5nIHBhcnRzIG9mIHRoZSBzdW4gaXMgZWFzaWx5IHZpc2libGUgb25seSBkdXJpbmcgYSB0b3RhbCBzb2xhciBlY2xpcHNlP2NvcmUscGhvdG9zcGhlcmUsc3Vuc3BvdHMsY29yb25hPzQjUFlvdSBhcmUgZ2l2ZW4gdHdvIHJvcGVzIGFuZCBhIGxpZ2h0ZXIuIEVhY2ggb2YgdGhlIHR3byByb3BlcyBoYXMgdGhlIGZvbGxvd2luZyBwcm9wZXJ0eTogaWYgeW91IGxpZ2h0IG9uZSBlbmQgb2YgdGhlIHJvcGUsIGl0IHdpbGwgdGFrZSBleGFjdGx5IG9uZSBob3VyIHRvIGJ1cm4gdG8gdGhlIG90aGVyIGVuZC4gSXQgZG9lc26SdCBuZWNlc3NhcmlseSBidXJuIGF0IGEgdW5pZm9ybSByYXRlLiBIb3cgY2FuIHlvdSBtZWFzdXJlIGEgcGVyaW9kIG9mIDQ1IG1pbnV0ZXM/IERvbid0IGtub3cj